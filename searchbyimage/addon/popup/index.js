!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=4)}([function(e,t,i){var r,n,o;n=[t],void 0===(o="function"==typeof(r=function(e){"use strict";function t(e,t){return new Promise((i,r)=>{e.onsuccess=t?()=>i(t(e.result)):()=>i(e.result),e.onerror=()=>r(e.error)})}Object.defineProperty(e,"__esModule",{value:!0}),e.waitForDOMRequest=t,e.getFileStorage=async function({name:e,persistent:t}={}){const i=new n({name:e||"default",persistent:t});return await i.initializedDB(),i};class i{constructor({file:e,lockedFile:t}){this.file=e,this.lockedFile=t,this.writeQueue=Promise.resolve(),this.closed=void 0,this.aborted=void 0}ensureLocked({invalidMode:e}={}){if(this.closed)throw new Error("FileHandle has been closed");if(this.aborted)throw new Error("FileHandle has been aborted");if(!this.lockedFile)throw new Error("Invalid FileHandled");if(e&&this.lockedFile.mode===e)throw new Error(`FileHandle should not be opened as '${this.lockedFile.mode}'`);this.lockedFile.active||this.file.reopenFileHandle(this)}get mode(){return this.lockedFile.mode}get active(){return!!this.lockedFile&&this.lockedFile.active}async close(){if(!this.lockedFile)throw new Error("FileHandle is not open");await this.writeQueue,this.lockedFile.active&&"readonly"!==this.lockedFile.mode&&await t(this.lockedFile.flush()),this.closed=!0,this.lockedFile=null,this.writeQueue=Promise.resolve()}async abort(){this.lockedFile.active&&this.lockedFile.abort(),this.aborted=!0,this.lockedFile=null,this.writeQueue=Promise.resolve()}async getMetadata(){return this.ensureLocked(),t(this.lockedFile.getMetadata())}async readAsText(e,i){return this.ensureLocked({invalidMode:"writeonly"}),"number"==typeof i&&(this.lockedFile.location=i),t(this.lockedFile.readAsText(e))}async readAsArrayBuffer(e,i){return this.ensureLocked({invalidMode:"writeonly"}),"number"==typeof i&&(this.lockedFile.location=i),t(this.lockedFile.readAsArrayBuffer(e))}async truncate(e=0){return this.ensureLocked({invalidMode:"readonly"}),t(this.lockedFile.truncate(e))}async append(e){return this.ensureLocked({invalidMode:"readonly"}),t(this.lockedFile.append(e))}async write(e,i){return this.ensureLocked({invalidMode:"readonly"}),"number"==typeof i&&(this.lockedFile.location=i),t(this.lockedFile.write(e),()=>this.lockedFile.location)}queuedWrite(e,t){return this.writeQueue=this.writeQueue.then(async i=>(this.ensureLocked({invalidMode:"readonly"}),"number"==typeof t?this.write(e,t):this.write(e,i))),this.writeQueue}async waitForQueuedWrites(){await this.writeQueue}}e.IDBPromisedFileHandle=i;class r{constructor({filesStorage:e,idb:t,fileName:i,fileType:r,mutableFile:n}){this.filesStorage=e,this.idb=t,this.fileName=i,this.fileType=r,this.mutableFile=n}reopenFileHandle(e){e.lockedFile=this.mutableFile.open(e.mode)}open(e){if(this.lockedFile)throw new Error("MutableFile cannot be opened twice");const t=this.mutableFile.open(e);return new i({file:this,lockedFile:t})}getFile(){return t(this.mutableFile.getFile())}async persistAsFileSnapshot(e){if(e===this.fileName)throw new Error("Snapshot name and the file name should be different");const t=await this.filesStorage.initializedDB();return await this.runFileRequestGenerator(function*(){const i=yield this.mutableFile.getFile(),r=this.filesStorage.getObjectStoreTransaction({idb:t,mode:"readwrite"});yield r.put(i,e)}.bind(this)),this.filesStorage.get(e)}persist(){return this.filesStorage.put(this.fileName,this)}async runFileRequestGenerator(e,t){if("GeneratorFunction"!==e.constructor.name)throw new Error("runGenerator parameter should be a generator function");await new Promise((i,r)=>{const n=this.mutableFile.open(t||"readwrite"),o=e(n),s=e=>{const t=o.next(e);if(t.done)return void i();if(!(t.value instanceof window.DOMRequest||t.value instanceof window.IDBRequest)){const e=new Error("FileRequestGenerator should only yield DOMRequest instances");return o.throw(e),void r(e)}const n=t.value;if(n.onsuccess||n.onerror){const e=new Error("DOMRequest onsuccess/onerror callbacks are already set");o.throw(e),r(e)}else n.onsuccess=()=>s(n.result),n.onerror=()=>r(n.error)};s()})}}e.IDBPromisedMutableFile=r;class n{constructor({name:e,persistent:t}={}){this.name=e,this.persistent=t,this.indexedDBName="IDBFilesStorage-DB-"+this.name,this.objectStorageName="IDBFilesObjectStorage",this.initializedPromise=void 0,this.version=1}initializedDB(){return this.initializedPromise||(this.initializedPromise=(async()=>{window.IDBMutableFile&&this.persistent&&(this.version={version:this.version,storage:"persistent"});const e=indexedDB.open(this.indexedDBName,this.version);return e.onupgradeneeded=()=>{const t=e.result;t.objectStoreNames.contains(this.objectStorageName)||t.createObjectStore(this.objectStorageName)},t(e)})()),this.initializedPromise}getObjectStoreTransaction({idb:e,mode:t}={}){return e.transaction([this.objectStorageName],t).objectStore(this.objectStorageName)}async createMutableFile(e,i="text"){if(!window.IDBMutableFile)throw new Error("This environment does not support IDBMutableFile");const n=await this.initializedDB(),o=await t(n.createMutableFile(e,i));return new r({filesStorage:this,idb:n,fileName:e,fileType:i,mutableFile:o})}async put(e,i){if(!e||"string"!=typeof e)throw new Error("fileName parameter is mandatory");if(!(i instanceof File||i instanceof Blob||window.IDBMutableFile&&i instanceof window.IDBMutableFile||i instanceof r))throw new Error(`Unable to persist ${e}. Unknown file type.`);i instanceof r&&(i=i.mutableFile);const n=await this.initializedDB();return t(this.getObjectStoreTransaction({idb:n,mode:"readwrite"}).put(i,e))}async remove(e){if(!e)throw new Error("fileName parameter is mandatory");const i=await this.initializedDB();return t(this.getObjectStoreTransaction({idb:i,mode:"readwrite"}).delete(e))}async list(e){const i=await this.initializedDB(),r=this.getObjectStoreTransaction({idb:i});let n=await t(r.getAllKeys());return e&&(n=n.filter(t=>{let i=!0;return"string"==typeof e.startsWith&&(i=i&&t.startsWith(e.startsWith)),"string"==typeof e.endsWith&&(i=i&&t.endsWith(e.endsWith)),"string"==typeof e.includes&&(i=i&&t.includes(e.includes)),"function"==typeof e.filterFn&&(i=i&&e.filterFn(t)),i})),n}async count(e){if(!e){const e=await this.initializedDB();return t(this.getObjectStoreTransaction({idb:e}).count())}return(await this.list(e)).length}async get(e){const i=await this.initializedDB();return t(this.getObjectStoreTransaction({idb:i}).get(e)).then(t=>window.IDBMutableFile&&t instanceof window.IDBMutableFile?new r({filesStorage:this,idb:i,fileName:e,fileType:t.type,mutableFile:t}):t)}async clear(){const e=await this.initializedDB();return t(this.getObjectStoreTransaction({idb:e,mode:"readwrite"}).clear())}}e.IDBFileStorage=n})?r.apply(t,n):r)||(e.exports=o)},,,,function(e,t,i){console.log("loaded");var r,n=i(0);!async function(e){try{const i=await n.getFileStorage({name:"tmpFiles"}),o=await i.get(e);if(o instanceof File){var t=document.querySelector("img");t.onload=()=>{URL.revokeObjectURL(t.src)},t.src=URL.createObjectURL(o),r=o}}catch(e){throw console.error("Get stored data",e),e}}("temp.png"),document.querySelector("#select").addEventListener("click",e=>{browser.windows.create({type:"detached_panel",url:"/selector/panel.html",width:500,height:500})}),document.querySelector("#run").addEventListener("click",e=>{console.log(r),browser.tabs.query({active:!0,currentWindow:!0}).then((function(e){browser.tabs.sendMessage(e[0].id,{command:"reload",message:"bruh",image:URL.createObjectURL(r)})})).catch((function(e){console.error("Could not beastify: "+e)}))})}]);